plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}





subprojects {
	apply plugin : 'java'
	apply plugin : 'org.springframework.boot'
	apply plugin : 'io.spring.dependency-management'

	group = 'shoppingmall'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = '17'
	}


	// 기본 설정값으로 Jar파일화 비활성

	jar {
		enabled = false

	}

	// 기본 설정값으로 독립실행 불가능하게끔 설정
	bootJar {
		enabled = false
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.4"
		}
	}



	dependencies {

		// 공통
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


		//AWS 관련 의존성
		implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.0")
		implementation 'io.awspring.cloud:spring-cloud-aws-starter-parameter-store'
		implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

		compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'com.mysql:mysql-connector-j'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		// Spring Security 의존성 추가
		implementation "org.springframework.boot:spring-boot-starter-security"


		// 직렬화를 위한 Jackson 라이브러리 추가
		implementation 'com.fasterxml.jackson.core:jackson-databind'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

		// query-parameter 보기 위한 라이브러리 추가
		implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

		//feign 관련 설정
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'


	}

	clean {
		delete file('src/main/generated')
	}


	tasks.named('bootBuildImage') {
		builder = 'paketobuildpacks/builder-jammy-base:latest'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}


}






